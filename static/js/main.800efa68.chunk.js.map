{"version":3,"sources":["index.js","App.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","a","createElement","document","getElementById","App","props","_this","Object","C_Users_Jackie_OneDrive_Development_FCC_Projects_fcc_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Jackie_OneDrive_Development_FCC_Projects_fcc_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Jackie_OneDrive_Development_FCC_Projects_fcc_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","display","myIDs","zero","one","two","three","four","five","six","seven","eight","nine","add","subtract","multiply","divide","myNumCodes","decimalActive","operatorActive","validNum","justHitEquals","hitClear","bind","C_Users_Jackie_OneDrive_Development_FCC_Projects_fcc_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","hitBackspace","hitNumber","hitOperator","hitDecimal","hitEquals","handleKeyPress","addEventListener","e","keyCodeHit","keyCode","click","console","log","setState","length","newDisplay","slice","newOperatorActive","newDecimalActive","i","numHit","target","id","operatorHit","_this$state","answer","eval","isNaN","parseFloat","isFinite","answerHasDecimal","Number","isInteger","toString","react__WEBPACK_IMPORTED_MODULE_6___default","className","onClick","Component"],"mappings":"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","file":"static/js/main.800efa68.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { Component } from 'react';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: '0',\n      myIDs: {\n        zero: '0',\n        one: '1',\n        two: '2',\n        three: '3',\n        four: '4',\n        five: '5',\n        six: '6',\n        seven: '7',\n        eight: '8',\n        nine: '9',\n        add: '+',\n        subtract: '-',\n        multiply: '*',\n        divide: '/'\n      },\n      myNumCodes: [\n        'zero',\n        'one',\n        'two',\n        'three',\n        'four',\n        'five',\n        'six',\n        'seven',\n        'eight',\n        'nine'\n      ],\n      decimalActive: false,\n      operatorActive: false,\n      validNum: true,\n      justHitEquals: false\n    };\n    this.hitClear = this.hitClear.bind(this);\n    this.hitBackspace = this.hitBackspace.bind(this);\n    this.hitNumber = this.hitNumber.bind(this);\n    this.hitOperator = this.hitOperator.bind(this);\n    this.hitDecimal = this.hitDecimal.bind(this);\n    this.hitEquals = this.hitEquals.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress(e) {\n    let keyCodeHit = e.keyCode;\n    if (keyCodeHit >= 96 && keyCodeHit <= 105) {\n      keyCodeHit -= 96;\n      document.getElementById(this.state.myNumCodes[keyCodeHit]).click();\n      return;\n    }\n    switch (keyCodeHit) {\n      case 13:\n        document.getElementById('equals').click();\n        break;\n      case 67:\n        document.getElementById('clear').click();\n        break;\n      case 106:\n        document.getElementById('multiply').click();\n        break;\n      case 107:\n        document.getElementById('add').click();\n        break;\n      case 109:\n        document.getElementById('subtract').click();\n        break;\n      case 110:\n        document.getElementById('decimal').click();\n        break;\n      case 111:\n        document.getElementById('divide').click();\n        break;\n      case 8:\n        document.getElementById('backspace').click();\n        break;\n      default:\n        console.log(keyCodeHit);\n        return;\n    }\n  }\n\n  hitClear() {\n    this.setState({\n      display: '0',\n      decimalActive: false,\n      operatorActive: false,\n      validNum: true,\n      justHitEquals: false\n    });\n  }\n\n  hitBackspace() {\n    if (!this.state.validNum || this.state.display.length === 1) {\n      document.getElementById('clear').click();\n      return;\n    }\n    // drop the last key entered\n    let newDisplay = this.state.display.slice(0, -1);\n    // reset the state switches\n    let newOperatorActive = false;\n    let newDecimalActive = false;\n    for (let i = 0; i < newDisplay.length; i++) {\n      switch (newDisplay[i]) {\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          newOperatorActive = true;\n          newDecimalActive = false;\n          break;\n        case '.':\n          newDecimalActive = true;\n          break;\n        default:\n          // must be a number\n          newOperatorActive = false;\n      }\n    }\n    this.setState({\n      display: newDisplay,\n      operatorActive: newOperatorActive,\n      decimalActive: newDecimalActive\n    });\n  }\n\n  hitNumber(e) {\n    // Last calc was not a valid number only allow Clear key\n    if (!this.state.validNum) {\n      return;\n    }\n    let numHit = this.state.myIDs[e.target.id];\n    let newDisplay;\n    if (this.state.display === '0' || this.state.justHitEquals) {\n      newDisplay = numHit;\n    } else {\n      newDisplay = this.state.display + numHit;\n    }\n    this.setState({\n      operatorActive: false,\n      justHitEquals: false,\n      display: newDisplay\n    });\n  }\n\n  hitOperator(e) {\n    // Last calc was not a valid number only allow Clear key\n    if (!this.state.validNum) {\n      return;\n    }\n    // If operator and decimal are both active display looks like this '99+.'\n    // so just return until a number is hit. we don't want '99+.+'\n    if (this.state.operatorActive && this.state.decimalActive) {\n      return;\n    }\n\n    let operatorHit = this.state.myIDs[e.target.id];\n    const { display, operatorActive } = this.state;\n    // Only allow one operator in a row. if last key was an operator replace it with this new operator\n    const newDisplay = operatorActive\n      ? display.slice(0, -1) + operatorHit\n      : display + operatorHit;\n\n    this.setState({\n      decimalActive: false,\n      operatorActive: true,\n      justHitEquals: false,\n      display: newDisplay\n    });\n  }\n\n  hitDecimal() {\n    // Last calc was not a valid number only allow Clear key\n    if (!this.state.validNum) {\n      return;\n    }\n    //If current number already has a decimal just ignore this key hit\n    if (this.state.decimalActive) {\n      return;\n    }\n    //Add the decimal to the display and flag as decimalActive\n    this.setState({\n      decimalActive: true,\n      justHitEquals: false,\n      display: this.state.justHitEquals ? '0.' : this.state.display + '.'\n    });\n  }\n\n  hitEquals() {\n    // Last calc was not a valid number only allow Clear key\n    if (!this.state.validNum) {\n      return;\n    }\n    //If the last key hit was an operator - do not calc\n    if (this.state.operatorActive === true) {\n      return;\n    }\n    let answer = eval(this.state.display); //ESLint does not like eval\n    const validNum = !isNaN(parseFloat(answer)) && isFinite(answer);\n    const answerHasDecimal = !Number.isInteger(answer);\n\n    this.setState({\n      display: answer.toString(),\n      decimalActive: answerHasDecimal,\n      justHitEquals: true,\n      validNum: validNum\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>FCC Calculator Project</h1>\n        </header>\n        <main>\n          <div id=\"display\">{this.state.display}</div>\n          <div id=\"kayPadContainer\">\n            <div id=\"keypad\">\n              <button id=\"clear\" onClick={this.hitClear}>\n                C\n              </button>\n              <button id=\"backspace\" onClick={this.hitBackspace}>\n                <i className=\"fas fa-backspace\" />\n              </button>\n              <button id=\"divide\" onClick={this.hitOperator}>\n                /\n              </button>\n              <button id=\"seven\" onClick={this.hitNumber}>\n                7\n              </button>\n              <button id=\"eight\" onClick={this.hitNumber}>\n                8\n              </button>\n              <button id=\"nine\" onClick={this.hitNumber}>\n                9\n              </button>\n              <button id=\"multiply\" onClick={this.hitOperator}>\n                x\n              </button>\n              <button id=\"four\" onClick={this.hitNumber}>\n                4\n              </button>\n              <button id=\"five\" onClick={this.hitNumber}>\n                5\n              </button>\n              <button id=\"six\" onClick={this.hitNumber}>\n                6\n              </button>\n              <button id=\"subtract\" onClick={this.hitOperator}>\n                -\n              </button>\n              <button id=\"one\" onClick={this.hitNumber}>\n                1\n              </button>\n              <button id=\"two\" onClick={this.hitNumber}>\n                2\n              </button>\n              <button id=\"three\" onClick={this.hitNumber}>\n                3\n              </button>\n              <button id=\"add\" onClick={this.hitOperator}>\n                +\n              </button>\n              <button id=\"zero\" onClick={this.hitNumber}>\n                0\n              </button>\n              <button id=\"decimal\" onClick={this.hitDecimal}>\n                .\n              </button>\n              <button id=\"equals\" onClick={this.hitEquals}>\n                =\n              </button>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}